{"version":3,"sources":["../src/updateMaterial.js"],"names":["utils","apis","onSubmit","cur","scope","currentMaterial","newMaterial","materialForm","material","name","result","materialNames","filter","length","alert","updateMaterial","id","successCallBack","failCallBack","e","preprocess","description","description2","description_optional","unit","unit_of_measure","func","submitBtnText","formTitle","showMaterialForm","showLargeModal"],"mappings":";;;;;;;;AAAYA,W;;AACAC,U;;;AAENC,c,GAAW,SAAXA,QAAW;AAAA,eAAS,YAAM;AAC9B,cAAMC,MAAMC,MAAMC,eAAlB;AACA,cAAMC,cAAcF,MAAMG,YAAN,CAAmBC,QAAvC;;AAEA,cAAIF,YAAYG,IAAZ,KAAqBN,IAAIM,IAA7B,EAAmC;AACjC,gBAAMC,SAASN,MAAMO,aAAN,CAAoBC,MAApB,CAA2B;AAAA,qBAAQH,SAASH,YAAYG,IAArB,IAA6BA,SAASN,IAAIM,IAAlD;AAAA,aAA3B,CAAf;AACA,gBAAIC,OAAOG,MAAP,IAAiB,CAArB,EAAwB;AACtBb,oBAAMc,KAAN,CAAY,SAAZ,EAAuB,WAAvB,EAAoC,gDAApC;AACA;AACD;AACF;;AAEDb,eAAKc,cAAL,CACEZ,IAAIa,EADN,EAEEV,WAFF,EAGEN,MAAMiB,eAAN,CAAsB,6BAAtB,EAAqD,wCAArD,EAA+Fb,KAA/F,CAHF,EAIE;AAAA,mBAAKJ,MAAMkB,YAAN,CAAmB,6BAAnB,wDAAsGC,CAAtG,wBAAL;AAAA,WAJF;AAMD,SAlBgB;AAAA,O;;AAoBXC,gB,GAAa,SAAbA,UAAa,QAAS;AAC1B,YAAMjB,MAAMC,MAAMC,eAAlB;AACAD,cAAMG,YAAN,GAAqB;AACnBC,oBAAU;AACRQ,gBAAKb,IAAIa,EADD;AAERK,yBAAalB,IAAIkB,WAFT;AAGRC,0BAAcnB,IAAIoB,oBAHV;AAIRC,kBAAMrB,IAAIsB,eAJF;AAKRhB,kBAAMN,IAAIM;AALF,WADS;AAQnBiB,gBAAM;AACJxB,sBAAUA,SAASE,KAAT;AADN,WARa;AAWnBuB,yBAAe,QAXI;AAYnBC,qBAAW;AAZQ,SAArB;AAcD,O;;kCAEYC,gB,GAAmB,SAAnBA,gBAAmB,QAAS;AACvCT,mBAAWhB,KAAX;AACAJ,cAAM8B,cAAN,CAAqB,oBAArB,EAA2C1B,KAA3C;AACD,O","file":"updateMaterial.js","sourcesContent":["import * as utils from './utils'\r\nimport * as apis from './apis'\r\n\r\nconst onSubmit = scope => () => {\r\n  const cur = scope.currentMaterial\r\n  const newMaterial = scope.materialForm.material\r\n\r\n  if (newMaterial.name !== cur.name) {\r\n    const result = scope.materialNames.filter(name => name === newMaterial.name && name !== cur.name)\r\n    if (result.length >= 1) {\r\n      utils.alert('warning', 'Id exists', 'The ID of the material you are updating exists')\r\n      return\r\n    }\r\n  }\r\n\r\n  apis.updateMaterial(\r\n    cur.id, \r\n    newMaterial,\r\n    utils.successCallBack('mct-material-form-cancelBtn', 'Material has been updated successfully', scope),\r\n    e => utils.failCallBack('mct-material-form-cancelBtn', `Error occurred when updating the material due to ${e}, please try again`)\r\n  )\r\n}\r\n\r\nconst preprocess = scope => {\r\n  const cur = scope.currentMaterial\r\n  scope.materialForm = {\r\n    material: {\r\n      id : cur.id,\r\n      description: cur.description,\r\n      description2: cur.description_optional,\r\n      unit: cur.unit_of_measure,\r\n      name: cur.name\r\n    },\r\n    func: {\r\n      onSubmit: onSubmit(scope)\r\n    },\r\n    submitBtnText: 'Update',\r\n    formTitle: 'Update Material'\r\n  }\r\n}\r\n\r\nexport const showMaterialForm = scope => {\r\n  preprocess(scope)\r\n  utils.showLargeModal('material_form.html', scope)\r\n}"]}