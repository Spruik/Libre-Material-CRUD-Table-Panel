{"version":3,"sources":["../src/updateMaterial.js"],"names":["utils","apis","onSubmit","cur","scope","currentMaterial","newMaterial","materialForm","material","id","result","materialIds","filter","length","alert","updateMaterial","successCallBack","failCallBack","e","preprocess","description","description2","description_optional","unit","unit_of_measure","func","submitBtnText","formTitle","showMaterialForm","showLargeModal"],"mappings":";;;;;;;;AAAYA,W;;AACAC,U;;;AAENC,c,GAAW,SAAXA,QAAW;AAAA,eAAS,YAAM;AAC9B,cAAMC,MAAMC,MAAMC,eAAlB;AACA,cAAMC,cAAcF,MAAMG,YAAN,CAAmBC,QAAvC;;AAEA,cAAIF,YAAYG,EAAZ,KAAmBN,IAAIM,EAA3B,EAA+B;AAC7B,gBAAMC,SAASN,MAAMO,WAAN,CAAkBC,MAAlB,CAAyB;AAAA,qBAAMH,OAAOH,YAAYG,EAAnB,IAAyBA,OAAON,IAAIM,EAA1C;AAAA,aAAzB,CAAf;AACA,gBAAIC,OAAOG,MAAP,IAAiB,CAArB,EAAwB;AACtBb,oBAAMc,KAAN,CAAY,SAAZ,EAAuB,WAAvB,EAAoC,gDAApC;AACA;AACD;AACF;;AAEDb,eAAKc,cAAL,CACEZ,IAAIM,EADN,EAEEH,WAFF,EAGEN,MAAMgB,eAAN,CAAsB,6BAAtB,EAAqD,wCAArD,EAA+FZ,KAA/F,CAHF,EAIE;AAAA,mBAAKJ,MAAMiB,YAAN,CAAmB,6BAAnB,wDAAsGC,CAAtG,wBAAL;AAAA,WAJF;AAMD,SAlBgB;AAAA,O;;AAoBXC,gB,GAAa,SAAbA,UAAa,QAAS;AAC1B,YAAMhB,MAAMC,MAAMC,eAAlB;AACAD,cAAMG,YAAN,GAAqB;AACnBC,oBAAU;AACRC,gBAAKN,IAAIM,EADD;AAERW,yBAAajB,IAAIiB,WAFT;AAGRC,0BAAclB,IAAImB,oBAHV;AAIRC,kBAAMpB,IAAIqB;AAJF,WADS;AAOnBC,gBAAM;AACJvB,sBAAUA,SAASE,KAAT;AADN,WAPa;AAUnBsB,yBAAe,QAVI;AAWnBC,qBAAW;AAXQ,SAArB;AAaD,O;;kCAEYC,gB,GAAmB,SAAnBA,gBAAmB,QAAS;AACvCT,mBAAWf,KAAX;AACAJ,cAAM6B,cAAN,CAAqB,oBAArB,EAA2CzB,KAA3C;AACD,O","file":"updateMaterial.js","sourcesContent":["import * as utils from './utils'\nimport * as apis from './apis'\n\nconst onSubmit = scope => () => {\n  const cur = scope.currentMaterial\n  const newMaterial = scope.materialForm.material\n\n  if (newMaterial.id !== cur.id) {\n    const result = scope.materialIds.filter(id => id === newMaterial.id && id !== cur.id)\n    if (result.length >= 1) {\n      utils.alert('warning', 'Id exists', 'The ID of the material you are updating exists')\n      return\n    }\n  }\n\n  apis.updateMaterial(\n    cur.id, \n    newMaterial,\n    utils.successCallBack('mct-material-form-cancelBtn', 'Material has been updated successfully', scope),\n    e => utils.failCallBack('mct-material-form-cancelBtn', `Error occurred when updating the material due to ${e}, please try again`)\n  )\n}\n\nconst preprocess = scope => {\n  const cur = scope.currentMaterial\n  scope.materialForm = {\n    material: {\n      id : cur.id,\n      description: cur.description,\n      description2: cur.description_optional,\n      unit: cur.unit_of_measure\n    },\n    func: {\n      onSubmit: onSubmit(scope)\n    },\n    submitBtnText: 'Update',\n    formTitle: 'Update Material'\n  }\n}\n\nexport const showMaterialForm = scope => {\n  preprocess(scope)\n  utils.showLargeModal('material_form.html', scope)\n}"]}