{"version":3,"sources":["../src/editor.js"],"names":["tablePanelEditor","$q","uiSegmentSrv","restrict","scope","templateUrl","controller","TablePanelEditorCtrl","_","transformers","$scope","editor","panelCtrl","ctrl","panel","fontSizes","addColumnSegment","newPlusButton","updateTransformHints","canSetColumns","columnsHelpMessage","transform","dataRaw","when","columns","getColumns","segments","map","c","newSegment","value","text","column","find","push","render","plusButton","html","without"],"mappings":"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","file":"editor.js","sourcesContent":["import _ from 'lodash';\r\nimport { transformers } from './transformers';\r\n\r\nexport class TablePanelEditorCtrl {\r\n\r\n  /** @ngInject */\r\n  constructor($scope, $q, uiSegmentSrv) {\r\n    $scope.editor = this;\r\n    this.panelCtrl = $scope.ctrl;\r\n    this.panel = this.panelCtrl.panel;\r\n    this.transformers = transformers;\r\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\r\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\r\n    this.updateTransformHints();\r\n  }\r\n\r\n  updateTransformHints() {\r\n    this.canSetColumns = false;\r\n    this.columnsHelpMessage = '';\r\n\r\n    switch (this.panel.transform) {\r\n      case 'timeseries_aggregations': {\r\n        this.canSetColumns = true;\r\n        break;\r\n      }\r\n      case 'json': {\r\n        this.canSetColumns = true;\r\n        break;\r\n      }\r\n      case 'table': {\r\n        this.columnsHelpMessage = 'Columns and their order are determined by the data query';\r\n      }\r\n    }\r\n  }\r\n\r\n  getColumnOptions() {\r\n    if (!this.panelCtrl.dataRaw) {\r\n      return this.$q.when([]);\r\n    }\r\n    const columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\r\n    const segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({ value: c.text }));\r\n    return this.$q.when(segments);\r\n  }\r\n\r\n  addColumn() {\r\n    const columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\r\n    const column = _.find(columns, { text: this.addColumnSegment.value });\r\n\r\n    if (column) {\r\n      this.panel.columns.push(column);\r\n      this.render();\r\n    }\r\n\r\n    const plusButton = this.uiSegmentSrv.newPlusButton();\r\n    this.addColumnSegment.html = plusButton.html;\r\n    this.addColumnSegment.value = plusButton.value;\r\n  }\r\n\r\n  transformChanged() {\r\n    this.panel.columns = [];\r\n    if (this.panel.transform === 'timeseries_aggregations') {\r\n      this.panel.columns.push({ text: 'Avg', value: 'avg' });\r\n    }\r\n\r\n    this.updateTransformHints();\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  removeColumn(column) {\r\n    this.panel.columns = _.without(this.panel.columns, column);\r\n    this.panelCtrl.render();\r\n  }\r\n}\r\n\r\n/** @ngInject */\r\nexport function tablePanelEditor($q, uiSegmentSrv) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    scope: true,\r\n    templateUrl: 'public/plugins/smart-factory-products-crud-table-panel/partials/editor.html',\r\n    controller: TablePanelEditorCtrl,\r\n  };\r\n}\r\n"]}