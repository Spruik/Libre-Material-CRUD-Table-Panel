{"version":3,"sources":["../src/column_options.js"],"names":["columnOptionsTab","$q","uiSegmentSrv","restrict","scope","templateUrl","controller","ColumnOptionsCtrl","_","kbn","$scope","editor","activeStyleIndex","panelCtrl","ctrl","panel","unitFormats","getUnitFormats","colorModes","text","value","columnTypes","fontSizes","dateFormats","mappingTypes","getColumnNames","table","map","columns","col","onColorChange","bind","render","column","subItem","unit","newStyleRule","type","alias","decimals","colors","colorMode","pattern","dateFormat","thresholds","mappingType","styles","stylesCount","length","indexToInsert","last","splice","style","without","index","ref","copy","styleIndex","colorIndex","newColor","valueMaps","push","rangeMaps","from","to"],"mappings":"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","file":"column_options.js","sourcesContent":["import _ from 'lodash';\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nexport class ColumnOptionsCtrl {\r\n\r\n  /** @ngInject */\r\n  constructor($scope) {\r\n    $scope.editor = this;\r\n\r\n    this.activeStyleIndex = 0;\r\n    this.panelCtrl = $scope.ctrl;\r\n    this.panel = this.panelCtrl.panel;\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.colorModes = [\r\n      { text: 'Disabled', value: null },\r\n      { text: 'Cell', value: 'cell' },\r\n      { text: 'Value', value: 'value' },\r\n      { text: 'Row', value: 'row' },\r\n    ];\r\n    this.columnTypes = [\r\n      { text: 'Number', value: 'number' },\r\n      { text: 'String', value: 'string' },\r\n      { text: 'Date', value: 'date' },\r\n      { text: 'Hidden', value: 'hidden' },\r\n    ];\r\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\r\n    this.dateFormats = [\r\n      // { text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss' },\r\n      { text: 'YYYY-MM-DD HH:mm:ss.SSS', value: 'YYYY-MM-DD HH:mm:ss.SSS' },\r\n      // { text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a' },\r\n      // { text: 'MMMM D, YYYY LT', value: 'MMMM D, YYYY LT' },\r\n    ];\r\n    this.mappingTypes = [{ text: 'Value to text', value: 1 }, { text: 'Range to text', value: 2 }];\r\n\r\n    this.getColumnNames = () => {\r\n      if (!this.panelCtrl.table) {\r\n        return [];\r\n      }\r\n      return _.map(this.panelCtrl.table.columns, (col) => {\r\n        return col.text;\r\n      });\r\n    };\r\n\r\n    this.onColorChange = this.onColorChange.bind(this);\r\n  }\r\n\r\n  render() {\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  setUnitFormat(column, subItem) {\r\n    column.unit = subItem.value;\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  addColumnStyle() {\r\n    const newStyleRule = {\r\n      unit: 'short',\r\n      type: 'number',\r\n      alias: '',\r\n      decimals: 2,\r\n      colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\r\n      colorMode: null,\r\n      pattern: '',\r\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n      thresholds: [],\r\n      mappingType: 1,\r\n    };\r\n\r\n    const styles = this.panel.styles;\r\n    const stylesCount = styles.length;\r\n    let indexToInsert = stylesCount;\r\n\r\n    // check if last is a catch all rule, then add it before that one\r\n    if (stylesCount > 0) {\r\n      const last = styles[stylesCount - 1];\r\n      if (last.pattern === '/.*/') {\r\n        indexToInsert = stylesCount - 1;\r\n      }\r\n    }\r\n\r\n    styles.splice(indexToInsert, 0, newStyleRule);\r\n    this.activeStyleIndex = indexToInsert;\r\n  }\r\n\r\n  removeColumnStyle(style) {\r\n    this.panel.styles = _.without(this.panel.styles, style);\r\n  }\r\n\r\n  invertColorOrder(index) {\r\n    const ref = this.panel.styles[index].colors;\r\n    const copy = ref[0];\r\n    ref[0] = ref[2];\r\n    ref[2] = copy;\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  onColorChange(styleIndex, colorIndex) {\r\n    return newColor => {\r\n      this.panel.styles[styleIndex].colors[colorIndex] = newColor;\r\n      this.render();\r\n    };\r\n  }\r\n\r\n  addValueMap(style) {\r\n    if (!style.valueMaps) {\r\n      style.valueMaps = [];\r\n    }\r\n    style.valueMaps.push({ value: '', text: '' });\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  removeValueMap(style, index) {\r\n    style.valueMaps.splice(index, 1);\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  addRangeMap(style) {\r\n    if (!style.rangeMaps) {\r\n      style.rangeMaps = [];\r\n    }\r\n    style.rangeMaps.push({ from: '', to: '', text: '' });\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  removeRangeMap(style, index) {\r\n    style.rangeMaps.splice(index, 1);\r\n    this.panelCtrl.render();\r\n  }\r\n}\r\n\r\n/** @ngInject */\r\nexport function columnOptionsTab($q, uiSegmentSrv) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    scope: true,\r\n    templateUrl: 'public/plugins/smart-factory-products-crud-table-panel/partials/column_options.html',\r\n    controller: ColumnOptionsCtrl,\r\n  };\r\n}\r\n"]}